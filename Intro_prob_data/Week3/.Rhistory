today()
now()
now()
now()
now()
now()
now()
now()
today()
now()
rhdf5
?rhdf5
library(hdf5r)
installed.packages(hdf5r)
installed.packages('hdf5r')
install.packages('hdf5r')
library(hdf5r)
library(rhdf5))
source('https://www.bioconductor.org/bioclite.R')
source('https://www.bioconductor.org/biocLite.R')
source('https://bioconductor.org/biocLite.R')
source('https://bioconductor.org/BiocManager.R')
install.packages('BiocManager')
BiocManager::install('rhdf5')
library(rhdf5)
a=list()
class(a)
a=list(1,'a',2+3i)
class(a)
dim(a)
rm(a)
libray(httr)
libray('httr')
install.packages('httr')
libray('httr')
library(httr)
url=get('https://en.wikipedia.org/wiki/REC_Limited')
url <- get('https://en.wikipedia.org/wiki/REC_Limited')
url <- get("https://en.wikipedia.org/wiki/REC_Limited")
library(XML)
fil <- url('https://en.wikipedia.org/wiki/REC_Limited')
ifl
fil
html <- htmlTreeParse(fil)
html <- htmlTreeParse('https://en.wikipedia.org/wiki/REC_Limited',useInternalNodes = T)
html
htmlParse('https://en.wikipedia.org/wiki/REC_Limited')
htmlParse('https://scholar.google.com/scholar?cites=6848408012970352928&as_sdt=2005&sciodt=0')
temp <- htmlParse('https://scholar.google.com/scholar?cites=6848408012970352928&as_sdt=2005&sciodt=0')
temp
temp[1]
temp[[1]]
rm(list=ls())
file <- htmlTreeParse('https://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en')
file
file[[1]]
file[[2]]
url <- url('https://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en')
file <- htmlTreeParse(url)
url <- 'https://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en'
file <- htmlTreeParse(url,useInternalNodes = T)
file
xpathSApply(file,'//title',xmlValue)
pg = GET('https://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en')
pg
names(pg)
pg[['cookies']]
class(pg[['cookies']])
str(pg[['cookies']])
pg[['content']]
str(pg[['content']])
names(pg)
pg[['date']]
pg[['date']] <- tz('IST')
pg[['date']]
pg
pg
pg
pg
pg
rm(list=ls())
?oauth_app
df <- data("mtcars")
library(dplyr)
names(ddf)
names(df)
df
df <- data(mtcars)
df
data("band_instruments")
data("")
data()
data(mtcars)
mtcars
df <- mtcars
df
class(df)
names(df)
select(df,mpg,gear)
names(df)
select(df,mpg:drat)
?select
rm(mtcars)
force(band_instruments)
force(band_instruments)
rm(band_instruments)
filter(df,mpg>40 & hp<100)
filter(df,mpg>40)
df
filter(df,mpg>24 & hp>200)
filter(df,mpg>24 & hp<200)
mutate(df,new = mpg*hp)
mutate(df,new = is.na(mpg))
mutate(df,new = is.numeroc(mpg))
mutate(df,new = is.numeric(mpg))
mutate(df,new = mpg>30)
mutate(df,new = complete.cases(df))
df <- rbind(df,list=rep(NA,11))
df
mutate(df,new = complete.cases(df))
getwd()
data()
data("airquality")
airquality
complete.cases(airquality)
airquality[!complete.cases(airquality),]
airquality
mutate(airquality,new=complete.cases(airquality))
table(airquality[['new']])
table(airquality$new)
airquality$new
names(airquality)
airquality <- mutate(airquality,new=complete.cases(airquality))
names(airquality)
table(airquality$new)
rename(df,MilesPerGallon=mpg)
rename(df,MilesPerGallon=mpg, HorsePower=hp)
new=c('MilesPerGallon','Cylinder')
rename(df,new=mpg:cyl)
rlang::last_error()
summarise(df,mean(mpg))
summarise(df,mean(mpg,na.rm = T))
summarise(df,meanMpg = mean(mpg,na.rm = T))
summarise(df,meanMpg = mean(mpg,na.rm = T), medianHp = median(hp))
summarise(df,meanMpg = mean(mpg,na.rm = T), medianHp = median(hp, na.rm = T))
summarise(df)
summarise(df,meanMpg = mean(mpg,na.rm = T), medianHp = median(hp), sum(hp+mpg))
summarise(df,meanMpg = mean(mpg,na.rm = T), medianHp = median(hp), sum(hp+mpg,na.rm = ))
summarise(df,meanMpg = mean(mpg,na.rm = T), medianHp = median(hp), sum(hp+mpg,na.rm = T))
summarise(df,meanMpg = mean(mpg,na.rm = T), medianHp = median(hp), something = sum(hp+mpg,na.rm = T))
df$mpg+df$hp
sum(df$mpg+df$hp)
sum(df$mpg+df$hp, na.rm = T)
new
rm(new)
df
df <- df %>% rename(MilesPerGallon = mp,HorsePower = hp)
df <- df %>% rename(MilesPerGallon = mpg,HorsePower = hp)
df
rm(list=ls())
swirl()
library(swirl)
install.packages('swirl')
library(swirl)
swirl()
packageVersion(swirl())
packageVersion(swirl
)
packageVersion(swirl)
packageVersion('swirl')
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
read.csv(path2csv,stringsAsFactors = FAL)
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion(dplyr)
packageVersion('dplyr')
cran <- tbl_df(mydf)
rm(mudf)
rm(mydf)
rm('mydf')
cram
cran
?select
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(cran,country:r_arch)
cran
select(cran, -time)
select(cran, -X:size)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran,package=='swirl')
filter(cran. r_version = '3.1.1' , country = 'US')
filter(cran, r_version = '3.1.1' , country = 'US')
filter(cran, r_version == '3.1.1' , country == 'US')
?Comparison
filter(cran, r_version <= '3.0.2' , country == 'IN')
filter(cran, country == 'US' | country == 'IN')
filter(cran, size > 100500 , r_os=='linux-gnu')
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran, !is.na(r_version))
cran2 <- select(cran , size:ip_id)
arrange(cran, ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2,package, ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3 <- select(cran,ip_id,package,soze)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran,size_mb=size/2^20)
mutate(cran, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20)
mutate(cran3, size_mb = size/2^20,size_gb=size_mb/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^20)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb/2^10)
mutate(cran3, correct)
mutate(cran3, correct_size = size+1000)
summarise(cran, avg_bytes = mean(soze))
summarise(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
rm(list=ls())
library(plyr)
?join
?join_all
?join
?join_all
?join
?strsplit
a <- '    adhi   '
library(stringr)
str_trim(a)
?str_trim
str_trim(a,side = 'left')
str_trim(a,side = 'right')
str_trim(a,side = 'both')
str_trim(a)
gsub(' ','',a)
gsub(' ','0',a)
gsub(' ','-',a)
sub(' ','-',a)
sub(' ','',a)
data(mtcars)
mtcars <- data.frame(mtcars)
rm(a)
names(a)
names(mtcars)
tolower(names(mtcars))
toupper(names(mtcars))
names(mtcars)
names(mtcars) <- toupper(names(mtcars))
names(mtcars)
head(mtcars)
?strsplit
a <- c('hi121ty','yoo1okds','u2')
a
strsplit(a,'1')
b <- strsplit(a,'1')
b
class(b)
b[1]
email <- 'adhishwar@yahoo.com'
strsplit(email,'@')
email <- strsplit(email,'@')
lapply(a,strsplit,split = '1')
c <- lapply(a,strsplit,split = '1')
c[1]
c[1][1]
c[[1]]
c[[1]][1]
c[[1]][[1]]
c[[1]][[1]][[1]]
emails <- c('adhishwar@yahoo.com','adhishwar.s@gmail.com','adhishwars@outlook.com')
splittedEmails <- lapply(emails, strsplit,split = '@')
splittedEmails
domains <- sapply(splittedEmails,function(a) { a[[1]][[1]] })
domains
domains <- sapply(splittedEmails,function(a) { a[[1]][[2]] })
domains
?str_trim
?strtrim
Sys.time()
as.logical(0)
as.logical(1)
as.logical(-12)
as.logical(10)
TRUE
as.numeric(TRUE)
as.numeric(FALSE)
data()
data("AirPassengers")
AirPassengers
rm("AirPassengers")
data("CO2")
CO@
CO@}
CO2
rm("CO@")
rm("CO2")
data("Ability and Intelligence Tests")
data('Ability and Intelligence Tests')
data("ability.cov")
ability.cov
rm(list=ls())
a <- c('name','address','Location.1','Location.2','email.address.home')
lapply(a,strsplit,split='.')
lapply(a,strsplit,split='//.')
lapply(a,strsplit,split='/.')
lapply(a,strsplit,split='.')
strsplit(a,'.')
strsplit(a,'//.')
strsplit(a,'/.')
lapply(a,str_split,split='//.')
str_split(a,'.')
str_split(a,'//.')
str_split(a,'/.')
?str_split
?strsplit
lapply(a,strsplit,split='.')
lapply(a,strsplit,split='//.')
str_split(a[1],'//.')
str_split(a[3],'//.')
str_split(a[1],'/.')
str_split(a[3],'.')
a
a[1]
a[2]
a[3]
a[4]
a[5]
library(stringr)
strsplit(a,"//.")
strsplit(a,"\\.")
strsplit(a,"\.")
strsplit(a,".")
strsplit(a,"\\.")
strsplit(a[3],"\\.")
strsplit(a,"\\.")
as.vector(strsplit(a,"\\."))
sapply(a, strsplit,split = '.')
sapply(a, strsplit,split = '\\.')
sapply(a, strsplit,split = '//.')
sapply(a, strsplit,split = '\\.')
b <- sapply(a, strsplit,split = '\\.')
clasS(v)
class(b)
b[1]
b[1][1]
b[1]
value <- sapply(b,function(s) s[1])
value
value
value[4]
value[5]
c <- value[5]
c
rm(c,value,b)
a
a <- c('name','phno','location.1')
strsplit
strsplit(a,'\\.')
install.packages('ggcharts')
a
strsplit(a,'\\.')
b <- strsplit(a,'\\.')
a
a <- c(a,'Locations.2.work')
a
b <- strsplit(a,'\\.')
b
lapply(b,function(str) str[[1]])
require(rvest)
?require
require(r2rtf)
library(r2rtf)
library(r2rtf)
require(r2rtf)
traceback()
library(r2rtf)
traceback()
a <- require(r2rtf)
a
a <- require(rvest)
a
a <- library(rvest)
a
rm(a,b)
a <- library(rvest)
a
a <- require(rvest)
a
a <- library(r2rtf)
a
rm(a)
a <- library(r2rtf)
a
a <- require(r2rtf)
a
a <- library()
a
?library
detach(library(rvest))
?detach
a
a <- library(rvest)
a
detach(a)
detach('rvest')
detach('rvest',unload = T)
rm(a)
?spit
?sp;it
?split
a <- c(10,10,20,103,10,90,80)
split(a,a>50)
split(a,a)
length(split(a,a))
as.factor(a)
levels(as.factor(a))
length(levels(as.factor(a)))
a
b <- 'Locatin.1.2'
strsplit(b,'\\.')
sub('.','-',b)
sub('\\.','-',b)
gsub('\\.','-',b)
b <- c(b,'email.address')
gsub('\\.','-',b)
b
a <- c('name','nameamnename','oknameok','address','phonenumber','fathername')
a
grep(a,'name')
?grep
grep('name',a)
grepl('name',a)
a[grep('name',a),]
a[grep('name',a)]
rm(list=ls())
swirl()
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm(mydf)
rm('mydf')
cran
?group_by
by_package <- group_by(cran,package)
by_package
summarize(by_package,mean(size))
submit()
submit()
?n
submit()
submit()
?mean
submit()
submit()
submit()
str(by_package)
str(ran)
str(cran)
table(cran$r_arch)
grep('6$',cran$r_arch)
length(grep('6$',cran$r_arch))
length(grep('^i',cran$r_arch))
length(grep('^i4$',cran$r_arch))
table(cran$r_os)
length(grep('^(darwin)',cran$r_arch))
length(grep('^d',cran$r_arch))
length(grep('^(darwin)',cran$r_os))
length(grep('^darwin',cran$r_os))
length(grep('^da',cran$r_os))
length(grep('^ds',cran$r_os))
cran
df <- data.frame(cran)
df
str(df)
table(df$r_arch)
grep('i',df$r_arch)
df[grep('i',df$r_arch),]
length(grep('i',df$r_arch))
grepl('i',df$r_arch)
length(grepl('i',df$r_arch))
length(!grepl('i',df$r_arch))
df[!grepl('i',df$r_arch),]
?str_trim
a <- c('   adhi   ','   shwar   ')
str_trim(a,side='both')
swirl()
rm(list=ls())
source('https://www.bioconductor.org/biocLite.R')
install.packages('BiocManager')
source('https://www.bioconductor.org/biocLite.R')
BiocManager::install('rhdf5')
install.packages(c("csv", "ellipsis", "foreign", "ggcharts", "haven", "modelr", "nlme", "tidyr", "tinytex", "xfun"))
getwd()
dir()
setwd(dir()[2])
dir()
setwd(dir()[1])
dir()
dir.create('Week3')
dir()
setwd(dir()[3])
dir()
